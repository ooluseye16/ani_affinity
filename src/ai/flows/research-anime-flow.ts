// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview This file defines a Genkit flow for researching anime details.
 *
 * - researchAnime - A function that takes an anime title and returns detailed information.
 * - ResearchAnimeInput - The input type for the researchAnime function.
 * - ResearchAnimeOutput - The return type for the researchAnime function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ResearchAnimeInputSchema = z.object({
  animeTitle: z.string().describe('The title of the anime to research.'),
});
export type ResearchAnimeInput = z.infer<typeof ResearchAnimeInputSchema>;

const ResearchAnimeOutputSchema = z.object({
  title: z.string().describe('The official or most common title of the anime.'),
  description: z.string().describe('A comprehensive overview or summary of the anime, including its plot and setting.'),
  genres: z.array(z.string()).describe('A list of primary genres for the anime (e.g., Action, Comedy, Sci-Fi).'),
  themes: z.array(z.string()).optional().describe('A list of prominent themes explored in the anime (e.g., Coming-of-Age, Post-Apocalyptic, Mecha).'),
  studio: z.string().optional().describe('The animation studio(s) responsible for the anime.'),
  yearReleased: z.string().optional().describe('The year or season the anime was first released (e.g., "2023", "Spring 2021").'),
  status: z.string().optional().describe('The airing status of the anime (e.g., "Finished Airing", "Currently Airing", "Not yet aired").'),
  numberOfEpisodes: z.string().optional().describe('Total number of episodes or format (e.g., "24 episodes", "Movie - 1h 45min", "Ongoing", "12 episodes per season").'),
  averageEpisodeLength: z.string().optional().describe('Typical length of an episode (e.g., "24 min per episode").'),
  ageRating: z.string().optional().describe('The age rating for the anime (e.g., "PG-13", "R - 17+ (violence & profanity)", "TV-MA").'),
  criticalReception: z.string().optional().describe('A brief summary of how the anime was received by critics and audiences, potentially including notable awards or general sentiment.'),
  whyWatch: z.string().optional().describe('A short paragraph highlighting key strengths, unique aspects, or reasons why someone might enjoy this anime.'),
  sourceMaterial: z.string().optional().describe('The source material of the anime, if any (e.g., "Manga", "Light Novel", "Original", "Visual Novel", "Game").'),
  imageUrl: z.string().url().optional().describe('A URL to a relevant image for the anime (e.g., cover art, promotional image). Use a placeholder if no specific image is found.'),
});
export type ResearchAnimeOutput = z.infer<typeof ResearchAnimeOutputSchema>;

export async function researchAnime(input: ResearchAnimeInput): Promise<ResearchAnimeOutput> {
  return researchAnimeFlow(input);
}

const researchAnimePrompt = ai.definePrompt({
  name: 'researchAnimePrompt',
  input: {schema: ResearchAnimeInputSchema},
  output: {schema: ResearchAnimeOutputSchema},
  prompt: `You are an AI Anime Encyclopedia. A user will provide an anime title, and you need to research and return detailed information about it.
  Please provide the following details for the anime titled "{{animeTitle}}":

  1.  Official or Common Title: (Confirm the title)
  2.  Description: A comprehensive overview of its plot, setting, and main characters.
  3.  Genres: A list of primary genres.
  4.  Themes: Prominent themes explored.
  5.  Studio: Animation studio(s).
  6.  Year/Season Released: When it was first released.
  7.  Status: Airing status (Finished, Ongoing, etc.).
  8.  Number of Episodes/Format: e.g., "24 episodes", "Movie - 1h 45min", "3 seasons, 12 episodes each".
  9.  Average Episode Length: Typical duration.
  10. Age Rating: e.g., PG-13, TV-MA.
  11. Critical Reception: Summary of how it was received by critics/audiences.
  12. Why Watch: Key strengths or reasons to watch it.
  13. Source Material: e.g., Manga, Light Novel, Original.
  14. Image URL: If possible, provide a URL to a relevant promotional image or cover art. If you cannot find a specific image, use a placeholder like "https://placehold.co/600x400.png" and add a data-ai-hint attribute to the placeholder image URL like "anime cover art".

  Focus on accuracy and provide as much detail as possible for each field. If some information is not readily available or applicable (e.g., themes for a very short OVA), you can indicate "N/A" or omit the field if optional in the schema.
  `,
});

const researchAnimeFlow = ai.defineFlow(
  {
    name: 'researchAnimeFlow',
    inputSchema: ResearchAnimeInputSchema,
    outputSchema: ResearchAnimeOutputSchema,
  },
  async input => {
    const {output} = await researchAnimePrompt(input);
    if (output && !output.imageUrl) {
        output.imageUrl = `https://placehold.co/600x400.png`; // Default placeholder
    }
    return output!;
  }
);
